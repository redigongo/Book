// Code generated by goa v3.14.1, DO NOT EDIT.
//
// books client
//
// Command:
// $ goa gen bookapp/design

package books

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "books" service client.
type Client struct {
	FindAllEndpoint  goa.Endpoint
	FindByIDEndpoint goa.Endpoint
	CreateEndpoint   goa.Endpoint
	UpdateEndpoint   goa.Endpoint
	DeleteEndpoint   goa.Endpoint
}

// NewClient initializes a "books" service client given the endpoints.
func NewClient(findAll, findByID, create, update, delete_ goa.Endpoint) *Client {
	return &Client{
		FindAllEndpoint:  findAll,
		FindByIDEndpoint: findByID,
		CreateEndpoint:   create,
		UpdateEndpoint:   update,
		DeleteEndpoint:   delete_,
	}
}

// FindAll calls the "findAll" endpoint of the "books" service.
// FindAll may return the following errors:
//   - "NotFound" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) FindAll(ctx context.Context) (res BookCollection, err error) {
	var ires any
	ires, err = c.FindAllEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(BookCollection), nil
}

// FindByID calls the "findById" endpoint of the "books" service.
// FindByID may return the following errors:
//   - "NotFound" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) FindByID(ctx context.Context, p *FindByIDPayload) (res *Book, err error) {
	var ires any
	ires, err = c.FindByIDEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Book), nil
}

// Create calls the "create" endpoint of the "books" service.
// Create may return the following errors:
//   - "NotFound" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) Create(ctx context.Context, p *CreatePayload) (res string, err error) {
	var ires any
	ires, err = c.CreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Update calls the "update" endpoint of the "books" service.
// Update may return the following errors:
//   - "NotFound" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) Update(ctx context.Context, p *UpdatePayload) (res string, err error) {
	var ires any
	ires, err = c.UpdateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Delete calls the "delete" endpoint of the "books" service.
// Delete may return the following errors:
//   - "NotFound" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) Delete(ctx context.Context, p *DeletePayload) (res string, err error) {
	var ires any
	ires, err = c.DeleteEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}
